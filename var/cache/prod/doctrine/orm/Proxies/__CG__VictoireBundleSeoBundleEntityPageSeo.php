<?php

namespace Proxies\__CG__\Victoire\Bundle\SeoBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class PageSeo extends \Victoire\Bundle\SeoBundle\Entity\PageSeo implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', 'id', 'createdAt', 'updatedAt', 'translations', 'newTranslations', 'currentLocale', 'defaultLocale'];
        }

        return ['__isInitialized__', 'id', 'createdAt', 'updatedAt', 'translations', 'newTranslations', 'currentLocale', 'defaultLocale'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (PageSeo $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function setRedirectTo(\Victoire\Bundle\CoreBundle\Entity\View $redirectTo, $locale = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRedirectTo', [$redirectTo, $locale]);

        return parent::setRedirectTo($redirectTo, $locale);
    }

    /**
     * {@inheritDoc}
     */
    public function getRedirectTo()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRedirectTo', []);

        return parent::getRedirectTo();
    }

    /**
     * {@inheritDoc}
     */
    public function setMetaTitle($metaTitle, $locale = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMetaTitle', [$metaTitle, $locale]);

        return parent::setMetaTitle($metaTitle, $locale);
    }

    /**
     * {@inheritDoc}
     */
    public function getMetaTitle()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMetaTitle', []);

        return parent::getMetaTitle();
    }

    /**
     * {@inheritDoc}
     */
    public function setMetaDescription($metaDescription, $locale = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMetaDescription', [$metaDescription, $locale]);

        return parent::setMetaDescription($metaDescription, $locale);
    }

    /**
     * {@inheritDoc}
     */
    public function getMetaDescription()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMetaDescription', []);

        return parent::getMetaDescription();
    }

    /**
     * {@inheritDoc}
     */
    public function setRelAuthor($relAuthor, $locale = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRelAuthor', [$relAuthor, $locale]);

        return parent::setRelAuthor($relAuthor, $locale);
    }

    /**
     * {@inheritDoc}
     */
    public function getRelAuthor()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRelAuthor', []);

        return parent::getRelAuthor();
    }

    /**
     * {@inheritDoc}
     */
    public function setRelPublisher($relPublisher, $locale = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRelPublisher', [$relPublisher, $locale]);

        return parent::setRelPublisher($relPublisher, $locale);
    }

    /**
     * {@inheritDoc}
     */
    public function getRelPublisher()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRelPublisher', []);

        return parent::getRelPublisher();
    }

    /**
     * {@inheritDoc}
     */
    public function setOgTitle($ogTitle, $locale = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOgTitle', [$ogTitle, $locale]);

        return parent::setOgTitle($ogTitle, $locale);
    }

    /**
     * {@inheritDoc}
     */
    public function getOgTitle()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOgTitle', []);

        return parent::getOgTitle();
    }

    /**
     * {@inheritDoc}
     */
    public function setOgType($ogType, $locale = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOgType', [$ogType, $locale]);

        return parent::setOgType($ogType, $locale);
    }

    /**
     * {@inheritDoc}
     */
    public function getOgType()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOgType', []);

        return parent::getOgType();
    }

    /**
     * {@inheritDoc}
     */
    public function setOgImage($ogImage, $locale = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOgImage', [$ogImage, $locale]);

        return parent::setOgImage($ogImage, $locale);
    }

    /**
     * {@inheritDoc}
     */
    public function getOgImage()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOgImage', []);

        return parent::getOgImage();
    }

    /**
     * {@inheritDoc}
     */
    public function setOgUrl($ogUrl, $locale = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOgUrl', [$ogUrl, $locale]);

        return parent::setOgUrl($ogUrl, $locale);
    }

    /**
     * {@inheritDoc}
     */
    public function getOgUrl()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOgUrl', []);

        return parent::getOgUrl();
    }

    /**
     * {@inheritDoc}
     */
    public function setOgDescription($ogDescription, $locale = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOgDescription', [$ogDescription, $locale]);

        return parent::setOgDescription($ogDescription, $locale);
    }

    /**
     * {@inheritDoc}
     */
    public function getOgDescription()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOgDescription', []);

        return parent::getOgDescription();
    }

    /**
     * {@inheritDoc}
     */
    public function setFbAdmins($fbAdmins, $locale = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFbAdmins', [$fbAdmins, $locale]);

        return parent::setFbAdmins($fbAdmins, $locale);
    }

    /**
     * {@inheritDoc}
     */
    public function getFbAdmins()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFbAdmins', []);

        return parent::getFbAdmins();
    }

    /**
     * {@inheritDoc}
     */
    public function setTwitterCard($twitterCard, $locale = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTwitterCard', [$twitterCard, $locale]);

        return parent::setTwitterCard($twitterCard, $locale);
    }

    /**
     * {@inheritDoc}
     */
    public function getTwitterCard()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTwitterCard', []);

        return parent::getTwitterCard();
    }

    /**
     * {@inheritDoc}
     */
    public function setTwitterUrl($twitterUrl, $locale = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTwitterUrl', [$twitterUrl, $locale]);

        return parent::setTwitterUrl($twitterUrl, $locale);
    }

    /**
     * {@inheritDoc}
     */
    public function getTwitterUrl()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTwitterUrl', []);

        return parent::getTwitterUrl();
    }

    /**
     * {@inheritDoc}
     */
    public function setTwitterCreator($twitterCreator, $locale = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTwitterCreator', [$twitterCreator, $locale]);

        return parent::setTwitterCreator($twitterCreator, $locale);
    }

    /**
     * {@inheritDoc}
     */
    public function getTwitterCreator()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTwitterCreator', []);

        return parent::getTwitterCreator();
    }

    /**
     * {@inheritDoc}
     */
    public function setTwitterTitle($twitterTitle, $locale = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTwitterTitle', [$twitterTitle, $locale]);

        return parent::setTwitterTitle($twitterTitle, $locale);
    }

    /**
     * {@inheritDoc}
     */
    public function getTwitterTitle()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTwitterTitle', []);

        return parent::getTwitterTitle();
    }

    /**
     * {@inheritDoc}
     */
    public function setTwitterDescription($twitterDescription, $locale = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTwitterDescription', [$twitterDescription, $locale]);

        return parent::setTwitterDescription($twitterDescription, $locale);
    }

    /**
     * {@inheritDoc}
     */
    public function getTwitterDescription()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTwitterDescription', []);

        return parent::getTwitterDescription();
    }

    /**
     * {@inheritDoc}
     */
    public function setTwitterImage($twitterImage, $locale = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTwitterImage', [$twitterImage, $locale]);

        return parent::setTwitterImage($twitterImage, $locale);
    }

    /**
     * {@inheritDoc}
     */
    public function getTwitterImage()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTwitterImage', []);

        return parent::getTwitterImage();
    }

    /**
     * {@inheritDoc}
     */
    public function setSchemaPageType($schemaPageType, $locale = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSchemaPageType', [$schemaPageType, $locale]);

        return parent::setSchemaPageType($schemaPageType, $locale);
    }

    /**
     * {@inheritDoc}
     */
    public function getSchemaPageType()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSchemaPageType', []);

        return parent::getSchemaPageType();
    }

    /**
     * {@inheritDoc}
     */
    public function setSchemaName($schemaName, $locale = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSchemaName', [$schemaName, $locale]);

        return parent::setSchemaName($schemaName, $locale);
    }

    /**
     * {@inheritDoc}
     */
    public function getSchemaName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSchemaName', []);

        return parent::getSchemaName();
    }

    /**
     * {@inheritDoc}
     */
    public function setSchemaDescription($schemaDescription, $locale = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSchemaDescription', [$schemaDescription, $locale]);

        return parent::setSchemaDescription($schemaDescription, $locale);
    }

    /**
     * {@inheritDoc}
     */
    public function getSchemaDescription()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSchemaDescription', []);

        return parent::getSchemaDescription();
    }

    /**
     * {@inheritDoc}
     */
    public function setSchemaImage($schemaImage, $locale = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSchemaImage', [$schemaImage, $locale]);

        return parent::setSchemaImage($schemaImage, $locale);
    }

    /**
     * {@inheritDoc}
     */
    public function getSchemaImage()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSchemaImage', []);

        return parent::getSchemaImage();
    }

    /**
     * {@inheritDoc}
     */
    public function setMetaRobotsIndex($metaRobotsIndex, $locale = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMetaRobotsIndex', [$metaRobotsIndex, $locale]);

        return parent::setMetaRobotsIndex($metaRobotsIndex, $locale);
    }

    /**
     * {@inheritDoc}
     */
    public function getMetaRobotsIndex()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMetaRobotsIndex', []);

        return parent::getMetaRobotsIndex();
    }

    /**
     * {@inheritDoc}
     */
    public function setMetaRobotsFollow($metaRobotsFollow, $locale = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMetaRobotsFollow', [$metaRobotsFollow, $locale]);

        return parent::setMetaRobotsFollow($metaRobotsFollow, $locale);
    }

    /**
     * {@inheritDoc}
     */
    public function getMetaRobotsFollow()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMetaRobotsFollow', []);

        return parent::getMetaRobotsFollow();
    }

    /**
     * {@inheritDoc}
     */
    public function setMetaRobotsAdvanced($metaRobotsAdvanced, $locale = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMetaRobotsAdvanced', [$metaRobotsAdvanced, $locale]);

        return parent::setMetaRobotsAdvanced($metaRobotsAdvanced, $locale);
    }

    /**
     * {@inheritDoc}
     */
    public function getMetaRobotsAdvanced()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMetaRobotsAdvanced', []);

        return parent::getMetaRobotsAdvanced();
    }

    /**
     * {@inheritDoc}
     */
    public function setSitemapIndexed($sitemapIndexed, $locale = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSitemapIndexed', [$sitemapIndexed, $locale]);

        return parent::setSitemapIndexed($sitemapIndexed, $locale);
    }

    /**
     * {@inheritDoc}
     */
    public function isSitemapIndexed()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isSitemapIndexed', []);

        return parent::isSitemapIndexed();
    }

    /**
     * {@inheritDoc}
     */
    public function setSitemapPriority($sitemapPriority, $locale = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSitemapPriority', [$sitemapPriority, $locale]);

        return parent::setSitemapPriority($sitemapPriority, $locale);
    }

    /**
     * {@inheritDoc}
     */
    public function getSitemapPriority()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSitemapPriority', []);

        return parent::getSitemapPriority();
    }

    /**
     * {@inheritDoc}
     */
    public function setSitemapChangeFreq($sitemapChangeFreq, $locale = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSitemapChangeFreq', [$sitemapChangeFreq, $locale]);

        return parent::setSitemapChangeFreq($sitemapChangeFreq, $locale);
    }

    /**
     * {@inheritDoc}
     */
    public function getSitemapChangeFreq()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSitemapChangeFreq', []);

        return parent::getSitemapChangeFreq();
    }

    /**
     * {@inheritDoc}
     */
    public function setRelCanonical($relCanonical, $locale = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRelCanonical', [$relCanonical, $locale]);

        return parent::setRelCanonical($relCanonical, $locale);
    }

    /**
     * {@inheritDoc}
     */
    public function getRelCanonical()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRelCanonical', []);

        return parent::getRelCanonical();
    }

    /**
     * {@inheritDoc}
     */
    public function setKeyword($keyword, $locale = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setKeyword', [$keyword, $locale]);

        return parent::setKeyword($keyword, $locale);
    }

    /**
     * {@inheritDoc}
     */
    public function getKeyword()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getKeyword', []);

        return parent::getKeyword();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreatedAt(\DateTime $createdAt)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreatedAt', [$createdAt]);

        return parent::setCreatedAt($createdAt);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreatedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreatedAt', []);

        return parent::getCreatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setUpdatedAt(\DateTime $updatedAt)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUpdatedAt', [$updatedAt]);

        return parent::setUpdatedAt($updatedAt);
    }

    /**
     * {@inheritDoc}
     */
    public function getUpdatedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUpdatedAt', []);

        return parent::getUpdatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function getTranslations()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTranslations', []);

        return parent::getTranslations();
    }

    /**
     * {@inheritDoc}
     */
    public function getNewTranslations()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNewTranslations', []);

        return parent::getNewTranslations();
    }

    /**
     * {@inheritDoc}
     */
    public function addTranslation($translation)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addTranslation', [$translation]);

        return parent::addTranslation($translation);
    }

    /**
     * {@inheritDoc}
     */
    public function removeTranslation($translation)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeTranslation', [$translation]);

        return parent::removeTranslation($translation);
    }

    /**
     * {@inheritDoc}
     */
    public function translate($locale = NULL, $fallbackToDefault = true)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'translate', [$locale, $fallbackToDefault]);

        return parent::translate($locale, $fallbackToDefault);
    }

    /**
     * {@inheritDoc}
     */
    public function mergeNewTranslations()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'mergeNewTranslations', []);

        return parent::mergeNewTranslations();
    }

    /**
     * {@inheritDoc}
     */
    public function setCurrentLocale($locale)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCurrentLocale', [$locale]);

        return parent::setCurrentLocale($locale);
    }

    /**
     * {@inheritDoc}
     */
    public function getCurrentLocale()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCurrentLocale', []);

        return parent::getCurrentLocale();
    }

    /**
     * {@inheritDoc}
     */
    public function setDefaultLocale($locale)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDefaultLocale', [$locale]);

        return parent::setDefaultLocale($locale);
    }

    /**
     * {@inheritDoc}
     */
    public function getDefaultLocale()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDefaultLocale', []);

        return parent::getDefaultLocale();
    }

}
