<?php

namespace Proxies\__CG__\Victoire\Bundle\WidgetBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Widget extends \Victoire\Bundle\WidgetBundle\Entity\Widget implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', 'id', 'slot', 'childrenSlot', 'theme', 'asynchronous', 'fields', 'mode', 'entityProxy', 'entity', 'widgetMap', 'criterias', 'quantum', 'currentView', 'containerTag', 'containerClass', 'containerWidth', 'containerHeight', 'containerMargin', 'containerPadding', 'textAlign', 'containerBackgroundType', 'containerBackgroundRepeat', 'containerBackgroundPosition', 'containerBackgroundSize', 'containerBackgroundColor', 'containerBackgroundImage', 'containerBackgroundOverlay', 'containerMarginXS', 'containerPaddingXS', 'containerWidthXS', 'containerHeightXS', 'textAlignXS', 'containerBackgroundTypeXS', 'containerBackgroundRepeatXS', 'containerBackgroundPositionXS', 'containerBackgroundSizeXS', 'containerBackgroundColorXS', 'containerBackgroundImageXS', 'containerBackgroundOverlayXS', 'containerMarginSM', 'containerPaddingSM', 'containerWidthSM', 'containerHeightSM', 'textAlignSM', 'containerBackgroundTypeSM', 'containerBackgroundRepeatSM', 'containerBackgroundPositionSM', 'containerBackgroundSizeSM', 'containerBackgroundColorSM', 'containerBackgroundImageSM', 'containerBackgroundOverlaySM', 'containerMarginMD', 'containerPaddingMD', 'containerWidthMD', 'containerHeightMD', 'textAlignMD', 'containerBackgroundTypeMD', 'containerBackgroundRepeatMD', 'containerBackgroundPositionMD', 'containerBackgroundSizeMD', 'containerBackgroundColorMD', 'containerBackgroundImageMD', 'containerBackgroundOverlayMD', 'containerMarginLG', 'containerPaddingLG', 'containerWidthLG', 'containerHeightLG', 'textAlignLG', 'containerBackgroundTypeLG', 'containerBackgroundRepeatLG', 'containerBackgroundPositionLG', 'containerBackgroundSizeLG', 'containerBackgroundColorLG', 'containerBackgroundImageLG', 'containerBackgroundOverlayLG', 'query', 'orderBy', 'businessEntityId', 'createdAt', 'updatedAt'];
        }

        return ['__isInitialized__', 'id', 'slot', 'childrenSlot', 'theme', 'asynchronous', 'fields', 'mode', 'entityProxy', 'entity', 'widgetMap', 'criterias', 'quantum', 'currentView', 'containerTag', 'containerClass', 'containerWidth', 'containerHeight', 'containerMargin', 'containerPadding', 'textAlign', 'containerBackgroundType', 'containerBackgroundRepeat', 'containerBackgroundPosition', 'containerBackgroundSize', 'containerBackgroundColor', 'containerBackgroundImage', 'containerBackgroundOverlay', 'containerMarginXS', 'containerPaddingXS', 'containerWidthXS', 'containerHeightXS', 'textAlignXS', 'containerBackgroundTypeXS', 'containerBackgroundRepeatXS', 'containerBackgroundPositionXS', 'containerBackgroundSizeXS', 'containerBackgroundColorXS', 'containerBackgroundImageXS', 'containerBackgroundOverlayXS', 'containerMarginSM', 'containerPaddingSM', 'containerWidthSM', 'containerHeightSM', 'textAlignSM', 'containerBackgroundTypeSM', 'containerBackgroundRepeatSM', 'containerBackgroundPositionSM', 'containerBackgroundSizeSM', 'containerBackgroundColorSM', 'containerBackgroundImageSM', 'containerBackgroundOverlaySM', 'containerMarginMD', 'containerPaddingMD', 'containerWidthMD', 'containerHeightMD', 'textAlignMD', 'containerBackgroundTypeMD', 'containerBackgroundRepeatMD', 'containerBackgroundPositionMD', 'containerBackgroundSizeMD', 'containerBackgroundColorMD', 'containerBackgroundImageMD', 'containerBackgroundOverlayMD', 'containerMarginLG', 'containerPaddingLG', 'containerWidthLG', 'containerHeightLG', 'textAlignLG', 'containerBackgroundTypeLG', 'containerBackgroundRepeatLG', 'containerBackgroundPositionLG', 'containerBackgroundSizeLG', 'containerBackgroundColorLG', 'containerBackgroundImageLG', 'containerBackgroundOverlayLG', 'query', 'orderBy', 'businessEntityId', 'createdAt', 'updatedAt'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Widget $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * {@inheritDoc}
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);

        parent::__clone();
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function isAsynchronous()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isAsynchronous', []);

        return parent::isAsynchronous();
    }

    /**
     * {@inheritDoc}
     */
    public function setAsynchronous($asynchronous)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAsynchronous', [$asynchronous]);

        return parent::setAsynchronous($asynchronous);
    }

    /**
     * {@inheritDoc}
     */
    public function setEntityProxy(\Victoire\Bundle\CoreBundle\Entity\BaseEntityProxy $entityProxy)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEntityProxy', [$entityProxy]);

        return parent::setEntityProxy($entityProxy);
    }

    /**
     * {@inheritDoc}
     */
    public function getEntityProxy()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEntityProxy', []);

        return parent::getEntityProxy();
    }

    /**
     * {@inheritDoc}
     */
    public function __toString()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__toString', []);

        return parent::__toString();
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setFields($fields)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFields', [$fields]);

        return parent::setFields($fields);
    }

    /**
     * {@inheritDoc}
     */
    public function getFields()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFields', []);

        return parent::getFields();
    }

    /**
     * {@inheritDoc}
     */
    public function setId($id)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setId', [$id]);

        return parent::setId($id);
    }

    /**
     * {@inheritDoc}
     */
    public function setSlot($slot)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSlot', [$slot]);

        return parent::setSlot($slot);
    }

    /**
     * {@inheritDoc}
     */
    public function getSlot()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSlot', []);

        return parent::getSlot();
    }

    /**
     * {@inheritDoc}
     */
    public function setTheme($theme)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTheme', [$theme]);

        return parent::setTheme($theme);
    }

    /**
     * {@inheritDoc}
     */
    public function getTheme()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTheme', []);

        return parent::getTheme();
    }

    /**
     * {@inheritDoc}
     */
    public function getType()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getType', []);

        return parent::getType();
    }

    /**
     * {@inheritDoc}
     */
    public function setMode($mode)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMode', [$mode]);

        return parent::setMode($mode);
    }

    /**
     * {@inheritDoc}
     */
    public function getMode()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMode', []);

        return parent::getMode();
    }

    /**
     * {@inheritDoc}
     */
    public function getViewId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getViewId', []);

        return parent::getViewId();
    }

    /**
     * {@inheritDoc}
     */
    public function getChildrenSlot()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getChildrenSlot', []);

        return parent::getChildrenSlot();
    }

    /**
     * {@inheritDoc}
     */
    public function setChildrenSlot($childrenSlot)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setChildrenSlot', [$childrenSlot]);

        return parent::setChildrenSlot($childrenSlot);
    }

    /**
     * {@inheritDoc}
     */
    public function setWidgetMap(\Victoire\Bundle\WidgetMapBundle\Entity\WidgetMap $widgetMap = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setWidgetMap', [$widgetMap]);

        return parent::setWidgetMap($widgetMap);
    }

    /**
     * {@inheritDoc}
     */
    public function getWidgetMap()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getWidgetMap', []);

        return parent::getWidgetMap();
    }

    /**
     * {@inheritDoc}
     */
    public function setEntity($entity)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEntity', [$entity]);

        return parent::setEntity($entity);
    }

    /**
     * {@inheritDoc}
     */
    public function getEntity()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEntity', []);

        return parent::getEntity();
    }

    /**
     * {@inheritDoc}
     */
    public function getCriterias()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCriterias', []);

        return parent::getCriterias();
    }

    /**
     * {@inheritDoc}
     */
    public function setCriterias($criterias)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCriterias', [$criterias]);

        return parent::setCriterias($criterias);
    }

    /**
     * {@inheritDoc}
     */
    public function addCriteria($criteria)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addCriteria', [$criteria]);

        return parent::addCriteria($criteria);
    }

    /**
     * {@inheritDoc}
     */
    public function removeCriteria(\Victoire\Bundle\CriteriaBundle\Entity\Criteria $criteria)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeCriteria', [$criteria]);

        return parent::removeCriteria($criteria);
    }

    /**
     * {@inheritDoc}
     */
    public function hasCriteria(\Victoire\Bundle\CriteriaBundle\Entity\Criteria $criteria)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'hasCriteria', [$criteria]);

        return parent::hasCriteria($criteria);
    }

    /**
     * {@inheritDoc}
     */
    public function hasCriteriaNamed($criteriaAlias)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'hasCriteriaNamed', [$criteriaAlias]);

        return parent::hasCriteriaNamed($criteriaAlias);
    }

    /**
     * {@inheritDoc}
     */
    public function getQuantum()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getQuantum', []);

        return parent::getQuantum();
    }

    /**
     * {@inheritDoc}
     */
    public function setQuantum($quantum)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setQuantum', [$quantum]);

        return parent::setQuantum($quantum);
    }

    /**
     * {@inheritDoc}
     */
    public function generateCacheId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'generateCacheId', []);

        return parent::generateCacheId();
    }

    /**
     * {@inheritDoc}
     */
    public function getLocale($defaultLocale)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLocale', [$defaultLocale]);

        return parent::getLocale($defaultLocale);
    }

    /**
     * {@inheritDoc}
     */
    public function setCurrentView($currentView)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCurrentView', [$currentView]);

        return parent::setCurrentView($currentView);
    }

    /**
     * {@inheritDoc}
     */
    public function getCurrentView()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCurrentView', []);

        return parent::getCurrentView();
    }

    /**
     * {@inheritDoc}
     */
    public function setContainerTag($containerTag)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setContainerTag', [$containerTag]);

        return parent::setContainerTag($containerTag);
    }

    /**
     * {@inheritDoc}
     */
    public function getContainerTag()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getContainerTag', []);

        return parent::getContainerTag();
    }

    /**
     * {@inheritDoc}
     */
    public function setContainerClass($containerClass)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setContainerClass', [$containerClass]);

        return parent::setContainerClass($containerClass);
    }

    /**
     * {@inheritDoc}
     */
    public function getContainerClass()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getContainerClass', []);

        return parent::getContainerClass();
    }

    /**
     * {@inheritDoc}
     */
    public function setContainerWidth($containerWidth)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setContainerWidth', [$containerWidth]);

        return parent::setContainerWidth($containerWidth);
    }

    /**
     * {@inheritDoc}
     */
    public function getContainerWidth()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getContainerWidth', []);

        return parent::getContainerWidth();
    }

    /**
     * {@inheritDoc}
     */
    public function setContainerHeight($containerHeight)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setContainerHeight', [$containerHeight]);

        return parent::setContainerHeight($containerHeight);
    }

    /**
     * {@inheritDoc}
     */
    public function getContainerHeight()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getContainerHeight', []);

        return parent::getContainerHeight();
    }

    /**
     * {@inheritDoc}
     */
    public function setContainerMargin($containerMargin)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setContainerMargin', [$containerMargin]);

        return parent::setContainerMargin($containerMargin);
    }

    /**
     * {@inheritDoc}
     */
    public function getContainerMargin()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getContainerMargin', []);

        return parent::getContainerMargin();
    }

    /**
     * {@inheritDoc}
     */
    public function setContainerPadding($containerPadding)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setContainerPadding', [$containerPadding]);

        return parent::setContainerPadding($containerPadding);
    }

    /**
     * {@inheritDoc}
     */
    public function getContainerPadding()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getContainerPadding', []);

        return parent::getContainerPadding();
    }

    /**
     * {@inheritDoc}
     */
    public function getTextAlign()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTextAlign', []);

        return parent::getTextAlign();
    }

    /**
     * {@inheritDoc}
     */
    public function setTextAlign($textAlign)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTextAlign', [$textAlign]);

        return parent::setTextAlign($textAlign);
    }

    /**
     * {@inheritDoc}
     */
    public function getContainerBackgroundType()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getContainerBackgroundType', []);

        return parent::getContainerBackgroundType();
    }

    /**
     * {@inheritDoc}
     */
    public function setContainerBackgroundType($containerBackgroundType)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setContainerBackgroundType', [$containerBackgroundType]);

        return parent::setContainerBackgroundType($containerBackgroundType);
    }

    /**
     * {@inheritDoc}
     */
    public function getContainerBackgroundRepeat()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getContainerBackgroundRepeat', []);

        return parent::getContainerBackgroundRepeat();
    }

    /**
     * {@inheritDoc}
     */
    public function setContainerBackgroundRepeat($containerBackgroundRepeat)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setContainerBackgroundRepeat', [$containerBackgroundRepeat]);

        return parent::setContainerBackgroundRepeat($containerBackgroundRepeat);
    }

    /**
     * {@inheritDoc}
     */
    public function getContainerBackgroundPosition()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getContainerBackgroundPosition', []);

        return parent::getContainerBackgroundPosition();
    }

    /**
     * {@inheritDoc}
     */
    public function setContainerBackgroundPosition($containerBackgroundPosition)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setContainerBackgroundPosition', [$containerBackgroundPosition]);

        return parent::setContainerBackgroundPosition($containerBackgroundPosition);
    }

    /**
     * {@inheritDoc}
     */
    public function getContainerBackgroundSize()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getContainerBackgroundSize', []);

        return parent::getContainerBackgroundSize();
    }

    /**
     * {@inheritDoc}
     */
    public function setContainerBackgroundSize($containerBackgroundSize)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setContainerBackgroundSize', [$containerBackgroundSize]);

        return parent::setContainerBackgroundSize($containerBackgroundSize);
    }

    /**
     * {@inheritDoc}
     */
    public function getContainerBackgroundColor()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getContainerBackgroundColor', []);

        return parent::getContainerBackgroundColor();
    }

    /**
     * {@inheritDoc}
     */
    public function setContainerBackgroundColor($containerBackgroundColor)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setContainerBackgroundColor', [$containerBackgroundColor]);

        return parent::setContainerBackgroundColor($containerBackgroundColor);
    }

    /**
     * {@inheritDoc}
     */
    public function getContainerBackgroundImage()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getContainerBackgroundImage', []);

        return parent::getContainerBackgroundImage();
    }

    /**
     * {@inheritDoc}
     */
    public function setContainerBackgroundImage(\Victoire\Bundle\MediaBundle\Entity\Media $image = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setContainerBackgroundImage', [$image]);

        return parent::setContainerBackgroundImage($image);
    }

    /**
     * {@inheritDoc}
     */
    public function getContainerBackgroundOverlay()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getContainerBackgroundOverlay', []);

        return parent::getContainerBackgroundOverlay();
    }

    /**
     * {@inheritDoc}
     */
    public function setContainerBackgroundOverlay($containerBackgroundOverlay)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setContainerBackgroundOverlay', [$containerBackgroundOverlay]);

        return parent::setContainerBackgroundOverlay($containerBackgroundOverlay);
    }

    /**
     * {@inheritDoc}
     */
    public function getContainerMarginXS()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getContainerMarginXS', []);

        return parent::getContainerMarginXS();
    }

    /**
     * {@inheritDoc}
     */
    public function setContainerMarginXS($containerMarginXS)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setContainerMarginXS', [$containerMarginXS]);

        return parent::setContainerMarginXS($containerMarginXS);
    }

    /**
     * {@inheritDoc}
     */
    public function getContainerPaddingXS()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getContainerPaddingXS', []);

        return parent::getContainerPaddingXS();
    }

    /**
     * {@inheritDoc}
     */
    public function setContainerPaddingXS($containerPaddingXS)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setContainerPaddingXS', [$containerPaddingXS]);

        return parent::setContainerPaddingXS($containerPaddingXS);
    }

    /**
     * {@inheritDoc}
     */
    public function getContainerHeightXS()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getContainerHeightXS', []);

        return parent::getContainerHeightXS();
    }

    /**
     * {@inheritDoc}
     */
    public function setContainerHeightXS($containerHeightXS)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setContainerHeightXS', [$containerHeightXS]);

        return parent::setContainerHeightXS($containerHeightXS);
    }

    /**
     * {@inheritDoc}
     */
    public function getContainerWidthXS()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getContainerWidthXS', []);

        return parent::getContainerWidthXS();
    }

    /**
     * {@inheritDoc}
     */
    public function setContainerWidthXS($containerWidthXS)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setContainerWidthXS', [$containerWidthXS]);

        return parent::setContainerWidthXS($containerWidthXS);
    }

    /**
     * {@inheritDoc}
     */
    public function getTextAlignXS()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTextAlignXS', []);

        return parent::getTextAlignXS();
    }

    /**
     * {@inheritDoc}
     */
    public function setTextAlignXS($textAlignXS)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTextAlignXS', [$textAlignXS]);

        return parent::setTextAlignXS($textAlignXS);
    }

    /**
     * {@inheritDoc}
     */
    public function getContainerBackgroundXS()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getContainerBackgroundXS', []);

        return parent::getContainerBackgroundXS();
    }

    /**
     * {@inheritDoc}
     */
    public function setContainerBackgroundXS($containerBackgroundXS)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setContainerBackgroundXS', [$containerBackgroundXS]);

        return parent::setContainerBackgroundXS($containerBackgroundXS);
    }

    /**
     * {@inheritDoc}
     */
    public function getContainerBackgroundTypeXS()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getContainerBackgroundTypeXS', []);

        return parent::getContainerBackgroundTypeXS();
    }

    /**
     * {@inheritDoc}
     */
    public function setContainerBackgroundTypeXS($containerBackgroundTypeXS)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setContainerBackgroundTypeXS', [$containerBackgroundTypeXS]);

        return parent::setContainerBackgroundTypeXS($containerBackgroundTypeXS);
    }

    /**
     * {@inheritDoc}
     */
    public function getContainerBackgroundRepeatXS()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getContainerBackgroundRepeatXS', []);

        return parent::getContainerBackgroundRepeatXS();
    }

    /**
     * {@inheritDoc}
     */
    public function setContainerBackgroundRepeatXS($containerBackgroundRepeatXS)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setContainerBackgroundRepeatXS', [$containerBackgroundRepeatXS]);

        return parent::setContainerBackgroundRepeatXS($containerBackgroundRepeatXS);
    }

    /**
     * {@inheritDoc}
     */
    public function getContainerBackgroundPositionXS()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getContainerBackgroundPositionXS', []);

        return parent::getContainerBackgroundPositionXS();
    }

    /**
     * {@inheritDoc}
     */
    public function setContainerBackgroundPositionXS($containerBackgroundPositionXS)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setContainerBackgroundPositionXS', [$containerBackgroundPositionXS]);

        return parent::setContainerBackgroundPositionXS($containerBackgroundPositionXS);
    }

    /**
     * {@inheritDoc}
     */
    public function getContainerBackgroundSizeXS()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getContainerBackgroundSizeXS', []);

        return parent::getContainerBackgroundSizeXS();
    }

    /**
     * {@inheritDoc}
     */
    public function setContainerBackgroundSizeXS($containerBackgroundSizeXS)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setContainerBackgroundSizeXS', [$containerBackgroundSizeXS]);

        return parent::setContainerBackgroundSizeXS($containerBackgroundSizeXS);
    }

    /**
     * {@inheritDoc}
     */
    public function getContainerBackgroundColorXS()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getContainerBackgroundColorXS', []);

        return parent::getContainerBackgroundColorXS();
    }

    /**
     * {@inheritDoc}
     */
    public function setContainerBackgroundColorXS($containerBackgroundColorXS)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setContainerBackgroundColorXS', [$containerBackgroundColorXS]);

        return parent::setContainerBackgroundColorXS($containerBackgroundColorXS);
    }

    /**
     * {@inheritDoc}
     */
    public function getContainerBackgroundImageXS()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getContainerBackgroundImageXS', []);

        return parent::getContainerBackgroundImageXS();
    }

    /**
     * {@inheritDoc}
     */
    public function setContainerBackgroundImageXS(\Victoire\Bundle\MediaBundle\Entity\Media $image = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setContainerBackgroundImageXS', [$image]);

        return parent::setContainerBackgroundImageXS($image);
    }

    /**
     * {@inheritDoc}
     */
    public function getContainerBackgroundOverlayXS()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getContainerBackgroundOverlayXS', []);

        return parent::getContainerBackgroundOverlayXS();
    }

    /**
     * {@inheritDoc}
     */
    public function setContainerBackgroundOverlayXS($containerBackgroundOverlayXS)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setContainerBackgroundOverlayXS', [$containerBackgroundOverlayXS]);

        return parent::setContainerBackgroundOverlayXS($containerBackgroundOverlayXS);
    }

    /**
     * {@inheritDoc}
     */
    public function getContainerMarginSM()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getContainerMarginSM', []);

        return parent::getContainerMarginSM();
    }

    /**
     * {@inheritDoc}
     */
    public function setContainerMarginSM($containerMarginSM)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setContainerMarginSM', [$containerMarginSM]);

        return parent::setContainerMarginSM($containerMarginSM);
    }

    /**
     * {@inheritDoc}
     */
    public function getContainerPaddingSM()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getContainerPaddingSM', []);

        return parent::getContainerPaddingSM();
    }

    /**
     * {@inheritDoc}
     */
    public function setContainerPaddingSM($containerPaddingSM)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setContainerPaddingSM', [$containerPaddingSM]);

        return parent::setContainerPaddingSM($containerPaddingSM);
    }

    /**
     * {@inheritDoc}
     */
    public function getContainerWidthSM()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getContainerWidthSM', []);

        return parent::getContainerWidthSM();
    }

    /**
     * {@inheritDoc}
     */
    public function setContainerWidthSM($containerWidthSM)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setContainerWidthSM', [$containerWidthSM]);

        return parent::setContainerWidthSM($containerWidthSM);
    }

    /**
     * {@inheritDoc}
     */
    public function getContainerHeightSM()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getContainerHeightSM', []);

        return parent::getContainerHeightSM();
    }

    /**
     * {@inheritDoc}
     */
    public function setContainerHeightSM($containerHeightSM)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setContainerHeightSM', [$containerHeightSM]);

        return parent::setContainerHeightSM($containerHeightSM);
    }

    /**
     * {@inheritDoc}
     */
    public function getTextAlignSM()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTextAlignSM', []);

        return parent::getTextAlignSM();
    }

    /**
     * {@inheritDoc}
     */
    public function setTextAlignSM($textAlignSM)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTextAlignSM', [$textAlignSM]);

        return parent::setTextAlignSM($textAlignSM);
    }

    /**
     * {@inheritDoc}
     */
    public function getContainerBackgroundSM()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getContainerBackgroundSM', []);

        return parent::getContainerBackgroundSM();
    }

    /**
     * {@inheritDoc}
     */
    public function setContainerBackgroundSM($containerBackgroundSM)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setContainerBackgroundSM', [$containerBackgroundSM]);

        return parent::setContainerBackgroundSM($containerBackgroundSM);
    }

    /**
     * {@inheritDoc}
     */
    public function getContainerBackgroundTypeSM()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getContainerBackgroundTypeSM', []);

        return parent::getContainerBackgroundTypeSM();
    }

    /**
     * {@inheritDoc}
     */
    public function setContainerBackgroundTypeSM($containerBackgroundTypeSM)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setContainerBackgroundTypeSM', [$containerBackgroundTypeSM]);

        return parent::setContainerBackgroundTypeSM($containerBackgroundTypeSM);
    }

    /**
     * {@inheritDoc}
     */
    public function getContainerBackgroundRepeatSM()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getContainerBackgroundRepeatSM', []);

        return parent::getContainerBackgroundRepeatSM();
    }

    /**
     * {@inheritDoc}
     */
    public function setContainerBackgroundRepeatSM($containerBackgroundRepeatSM)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setContainerBackgroundRepeatSM', [$containerBackgroundRepeatSM]);

        return parent::setContainerBackgroundRepeatSM($containerBackgroundRepeatSM);
    }

    /**
     * {@inheritDoc}
     */
    public function getContainerBackgroundPositionSM()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getContainerBackgroundPositionSM', []);

        return parent::getContainerBackgroundPositionSM();
    }

    /**
     * {@inheritDoc}
     */
    public function setContainerBackgroundPositionSM($containerBackgroundPositionSM)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setContainerBackgroundPositionSM', [$containerBackgroundPositionSM]);

        return parent::setContainerBackgroundPositionSM($containerBackgroundPositionSM);
    }

    /**
     * {@inheritDoc}
     */
    public function getContainerBackgroundSizeSM()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getContainerBackgroundSizeSM', []);

        return parent::getContainerBackgroundSizeSM();
    }

    /**
     * {@inheritDoc}
     */
    public function setContainerBackgroundSizeSM($containerBackgroundSizeSM)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setContainerBackgroundSizeSM', [$containerBackgroundSizeSM]);

        return parent::setContainerBackgroundSizeSM($containerBackgroundSizeSM);
    }

    /**
     * {@inheritDoc}
     */
    public function getContainerBackgroundColorSM()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getContainerBackgroundColorSM', []);

        return parent::getContainerBackgroundColorSM();
    }

    /**
     * {@inheritDoc}
     */
    public function setContainerBackgroundColorSM($containerBackgroundColorSM)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setContainerBackgroundColorSM', [$containerBackgroundColorSM]);

        return parent::setContainerBackgroundColorSM($containerBackgroundColorSM);
    }

    /**
     * {@inheritDoc}
     */
    public function getContainerBackgroundImageSM()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getContainerBackgroundImageSM', []);

        return parent::getContainerBackgroundImageSM();
    }

    /**
     * {@inheritDoc}
     */
    public function setContainerBackgroundImageSM(\Victoire\Bundle\MediaBundle\Entity\Media $image = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setContainerBackgroundImageSM', [$image]);

        return parent::setContainerBackgroundImageSM($image);
    }

    /**
     * {@inheritDoc}
     */
    public function getContainerBackgroundOverlaySM()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getContainerBackgroundOverlaySM', []);

        return parent::getContainerBackgroundOverlaySM();
    }

    /**
     * {@inheritDoc}
     */
    public function setContainerBackgroundOverlaySM($containerBackgroundOverlaySM)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setContainerBackgroundOverlaySM', [$containerBackgroundOverlaySM]);

        return parent::setContainerBackgroundOverlaySM($containerBackgroundOverlaySM);
    }

    /**
     * {@inheritDoc}
     */
    public function getContainerMarginMD()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getContainerMarginMD', []);

        return parent::getContainerMarginMD();
    }

    /**
     * {@inheritDoc}
     */
    public function setContainerMarginMD($containerMarginMD)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setContainerMarginMD', [$containerMarginMD]);

        return parent::setContainerMarginMD($containerMarginMD);
    }

    /**
     * {@inheritDoc}
     */
    public function getContainerPaddingMD()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getContainerPaddingMD', []);

        return parent::getContainerPaddingMD();
    }

    /**
     * {@inheritDoc}
     */
    public function setContainerPaddingMD($containerPaddingMD)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setContainerPaddingMD', [$containerPaddingMD]);

        return parent::setContainerPaddingMD($containerPaddingMD);
    }

    /**
     * {@inheritDoc}
     */
    public function getContainerWidthMD()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getContainerWidthMD', []);

        return parent::getContainerWidthMD();
    }

    /**
     * {@inheritDoc}
     */
    public function setContainerWidthMD($containerWidthMD)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setContainerWidthMD', [$containerWidthMD]);

        return parent::setContainerWidthMD($containerWidthMD);
    }

    /**
     * {@inheritDoc}
     */
    public function getContainerHeightMD()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getContainerHeightMD', []);

        return parent::getContainerHeightMD();
    }

    /**
     * {@inheritDoc}
     */
    public function setContainerHeightMD($containerHeightMD)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setContainerHeightMD', [$containerHeightMD]);

        return parent::setContainerHeightMD($containerHeightMD);
    }

    /**
     * {@inheritDoc}
     */
    public function getTextAlignMD()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTextAlignMD', []);

        return parent::getTextAlignMD();
    }

    /**
     * {@inheritDoc}
     */
    public function setTextAlignMD($textAlignMD)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTextAlignMD', [$textAlignMD]);

        return parent::setTextAlignMD($textAlignMD);
    }

    /**
     * {@inheritDoc}
     */
    public function getContainerBackgroundTypeMD()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getContainerBackgroundTypeMD', []);

        return parent::getContainerBackgroundTypeMD();
    }

    /**
     * {@inheritDoc}
     */
    public function setContainerBackgroundTypeMD($containerBackgroundTypeMD)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setContainerBackgroundTypeMD', [$containerBackgroundTypeMD]);

        return parent::setContainerBackgroundTypeMD($containerBackgroundTypeMD);
    }

    /**
     * {@inheritDoc}
     */
    public function getContainerBackgroundRepeatMD()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getContainerBackgroundRepeatMD', []);

        return parent::getContainerBackgroundRepeatMD();
    }

    /**
     * {@inheritDoc}
     */
    public function setContainerBackgroundRepeatMD($containerBackgroundRepeatMD)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setContainerBackgroundRepeatMD', [$containerBackgroundRepeatMD]);

        return parent::setContainerBackgroundRepeatMD($containerBackgroundRepeatMD);
    }

    /**
     * {@inheritDoc}
     */
    public function getContainerBackgroundPositionMD()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getContainerBackgroundPositionMD', []);

        return parent::getContainerBackgroundPositionMD();
    }

    /**
     * {@inheritDoc}
     */
    public function setContainerBackgroundPositionMD($containerBackgroundPositionMD)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setContainerBackgroundPositionMD', [$containerBackgroundPositionMD]);

        return parent::setContainerBackgroundPositionMD($containerBackgroundPositionMD);
    }

    /**
     * {@inheritDoc}
     */
    public function getContainerBackgroundSizeMD()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getContainerBackgroundSizeMD', []);

        return parent::getContainerBackgroundSizeMD();
    }

    /**
     * {@inheritDoc}
     */
    public function setContainerBackgroundSizeMD($containerBackgroundSizeMD)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setContainerBackgroundSizeMD', [$containerBackgroundSizeMD]);

        return parent::setContainerBackgroundSizeMD($containerBackgroundSizeMD);
    }

    /**
     * {@inheritDoc}
     */
    public function getContainerBackgroundColorMD()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getContainerBackgroundColorMD', []);

        return parent::getContainerBackgroundColorMD();
    }

    /**
     * {@inheritDoc}
     */
    public function setContainerBackgroundColorMD($containerBackgroundColorMD)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setContainerBackgroundColorMD', [$containerBackgroundColorMD]);

        return parent::setContainerBackgroundColorMD($containerBackgroundColorMD);
    }

    /**
     * {@inheritDoc}
     */
    public function getContainerBackgroundImageMD()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getContainerBackgroundImageMD', []);

        return parent::getContainerBackgroundImageMD();
    }

    /**
     * {@inheritDoc}
     */
    public function setContainerBackgroundImageMD(\Victoire\Bundle\MediaBundle\Entity\Media $image = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setContainerBackgroundImageMD', [$image]);

        return parent::setContainerBackgroundImageMD($image);
    }

    /**
     * {@inheritDoc}
     */
    public function getContainerBackgroundOverlayMD()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getContainerBackgroundOverlayMD', []);

        return parent::getContainerBackgroundOverlayMD();
    }

    /**
     * {@inheritDoc}
     */
    public function setContainerBackgroundOverlayMD($containerBackgroundOverlayMD)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setContainerBackgroundOverlayMD', [$containerBackgroundOverlayMD]);

        return parent::setContainerBackgroundOverlayMD($containerBackgroundOverlayMD);
    }

    /**
     * {@inheritDoc}
     */
    public function getContainerMarginLG()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getContainerMarginLG', []);

        return parent::getContainerMarginLG();
    }

    /**
     * {@inheritDoc}
     */
    public function setContainerMarginLG($containerMarginLG)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setContainerMarginLG', [$containerMarginLG]);

        return parent::setContainerMarginLG($containerMarginLG);
    }

    /**
     * {@inheritDoc}
     */
    public function getContainerPaddingLG()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getContainerPaddingLG', []);

        return parent::getContainerPaddingLG();
    }

    /**
     * {@inheritDoc}
     */
    public function setContainerPaddingLG($containerPaddingLG)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setContainerPaddingLG', [$containerPaddingLG]);

        return parent::setContainerPaddingLG($containerPaddingLG);
    }

    /**
     * {@inheritDoc}
     */
    public function getContainerWidthLG()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getContainerWidthLG', []);

        return parent::getContainerWidthLG();
    }

    /**
     * {@inheritDoc}
     */
    public function setContainerWidthLG($containerWidthLG)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setContainerWidthLG', [$containerWidthLG]);

        return parent::setContainerWidthLG($containerWidthLG);
    }

    /**
     * {@inheritDoc}
     */
    public function getContainerHeightLG()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getContainerHeightLG', []);

        return parent::getContainerHeightLG();
    }

    /**
     * {@inheritDoc}
     */
    public function setContainerHeightLG($containerHeightLG)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setContainerHeightLG', [$containerHeightLG]);

        return parent::setContainerHeightLG($containerHeightLG);
    }

    /**
     * {@inheritDoc}
     */
    public function getTextAlignLG()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTextAlignLG', []);

        return parent::getTextAlignLG();
    }

    /**
     * {@inheritDoc}
     */
    public function setTextAlignLG($textAlignLG)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTextAlignLG', [$textAlignLG]);

        return parent::setTextAlignLG($textAlignLG);
    }

    /**
     * {@inheritDoc}
     */
    public function getContainerBackgroundTypeLG()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getContainerBackgroundTypeLG', []);

        return parent::getContainerBackgroundTypeLG();
    }

    /**
     * {@inheritDoc}
     */
    public function setContainerBackgroundTypeLG($containerBackgroundTypeLG)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setContainerBackgroundTypeLG', [$containerBackgroundTypeLG]);

        return parent::setContainerBackgroundTypeLG($containerBackgroundTypeLG);
    }

    /**
     * {@inheritDoc}
     */
    public function getContainerBackgroundRepeatLG()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getContainerBackgroundRepeatLG', []);

        return parent::getContainerBackgroundRepeatLG();
    }

    /**
     * {@inheritDoc}
     */
    public function setContainerBackgroundRepeatLG($containerBackgroundRepeatLG)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setContainerBackgroundRepeatLG', [$containerBackgroundRepeatLG]);

        return parent::setContainerBackgroundRepeatLG($containerBackgroundRepeatLG);
    }

    /**
     * {@inheritDoc}
     */
    public function getContainerBackgroundPositionLG()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getContainerBackgroundPositionLG', []);

        return parent::getContainerBackgroundPositionLG();
    }

    /**
     * {@inheritDoc}
     */
    public function setContainerBackgroundPositionLG($containerBackgroundPositionLG)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setContainerBackgroundPositionLG', [$containerBackgroundPositionLG]);

        return parent::setContainerBackgroundPositionLG($containerBackgroundPositionLG);
    }

    /**
     * {@inheritDoc}
     */
    public function getContainerBackgroundSizeLG()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getContainerBackgroundSizeLG', []);

        return parent::getContainerBackgroundSizeLG();
    }

    /**
     * {@inheritDoc}
     */
    public function setContainerBackgroundSizeLG($containerBackgroundSizeLG)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setContainerBackgroundSizeLG', [$containerBackgroundSizeLG]);

        return parent::setContainerBackgroundSizeLG($containerBackgroundSizeLG);
    }

    /**
     * {@inheritDoc}
     */
    public function getContainerBackgroundColorLG()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getContainerBackgroundColorLG', []);

        return parent::getContainerBackgroundColorLG();
    }

    /**
     * {@inheritDoc}
     */
    public function setContainerBackgroundColorLG($containerBackgroundColorLG)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setContainerBackgroundColorLG', [$containerBackgroundColorLG]);

        return parent::setContainerBackgroundColorLG($containerBackgroundColorLG);
    }

    /**
     * {@inheritDoc}
     */
    public function getContainerBackgroundImageLG()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getContainerBackgroundImageLG', []);

        return parent::getContainerBackgroundImageLG();
    }

    /**
     * {@inheritDoc}
     */
    public function setContainerBackgroundImageLG(\Victoire\Bundle\MediaBundle\Entity\Media $image = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setContainerBackgroundImageLG', [$image]);

        return parent::setContainerBackgroundImageLG($image);
    }

    /**
     * {@inheritDoc}
     */
    public function getContainerBackgroundOverlayLG()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getContainerBackgroundOverlayLG', []);

        return parent::getContainerBackgroundOverlayLG();
    }

    /**
     * {@inheritDoc}
     */
    public function setContainerBackgroundOverlayLG($containerBackgroundOverlayLG)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setContainerBackgroundOverlayLG', [$containerBackgroundOverlayLG]);

        return parent::setContainerBackgroundOverlayLG($containerBackgroundOverlayLG);
    }

    /**
     * {@inheritDoc}
     */
    public function getQuery()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getQuery', []);

        return parent::getQuery();
    }

    /**
     * {@inheritDoc}
     */
    public function setQuery($query)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setQuery', [$query]);

        return parent::setQuery($query);
    }

    /**
     * {@inheritDoc}
     */
    public function getOrderBy()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOrderBy', []);

        return parent::getOrderBy();
    }

    /**
     * {@inheritDoc}
     */
    public function setOrderBy($orderBy)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOrderBy', [$orderBy]);

        return parent::setOrderBy($orderBy);
    }

    /**
     * {@inheritDoc}
     */
    public function getBusinessEntityId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBusinessEntityId', []);

        return parent::getBusinessEntityId();
    }

    /**
     * {@inheritDoc}
     */
    public function setBusinessEntityId($businessEntityId)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBusinessEntityId', [$businessEntityId]);

        return parent::setBusinessEntityId($businessEntityId);
    }

    /**
     * {@inheritDoc}
     */
    public function setCreatedAt(\DateTime $createdAt)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreatedAt', [$createdAt]);

        return parent::setCreatedAt($createdAt);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreatedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreatedAt', []);

        return parent::getCreatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setUpdatedAt(\DateTime $updatedAt)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUpdatedAt', [$updatedAt]);

        return parent::setUpdatedAt($updatedAt);
    }

    /**
     * {@inheritDoc}
     */
    public function getUpdatedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUpdatedAt', []);

        return parent::getUpdatedAt();
    }

}
